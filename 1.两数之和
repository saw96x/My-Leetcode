#include <vector>
#include<unordered_map>
using namespace std;
class Solution1
{
public:
    vector<int> twoSum(vector<int> &nums, int target)
    {
        int i = 0, j;
        for (i = 0; i < nums.size() - 1; i++)//暴力双循环
            for (j = i + 1; j < nums.size(); j++)
                if (nums[i] + nums[j] == target)
                    return {i, j};
        return {};
    }
};
class Solution2
{
public:
    vector<int> twoSum(vector<int> &nums, int target)
    {
        unordered_map<int, int> m;//建立哈希表
        for (int i = 0; i < nums.size(); i++)
            m[nums[i]] = i;          //此哈希表的键为nums的值，哈希表的值为nums对应值的下标
        for (int i = 0; i < nums.size(); i++)
        {
            if (m.find(target - nums[i]) != m.end() && m[target - nums[i]] != i)//查找键是否在哈希表中，并且值不等于i
                return {i, m[target - nums[i]]};
        }
        return {};
    }
};
